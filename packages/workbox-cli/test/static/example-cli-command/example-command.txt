workbox --cacheId 'input-cache-id' --clientsClaim true --directoryIndex '/example-index.html' --handleFetch false --maximumFileSizeToCacheInBytes 2000 --navigateFallback /shell --skipWaiting true


  --dontCacheBustUrlsMatching /./
  --ignoreUrlParametersMatching [/^example/, /^other/]
  --navigateFallbackWhitelist [/^\/guide\//, /^\/lolz\//]
  --globPatterns ['**/*.{html,js,css}']
  --modifyUrlPrefix {'/styles': '/static/styles','/page': '/pages/page'}
  --runtimeCaching [{urlPattern: /^https:\/\/example\.com\/api/,handler: 'cacheFirst'}, {urlPattern: /^https:\/\/example\.com\/api/,handler: 'cacheOnly'}, {urlPattern: /^https:\/\/example\.com\/api/,handler: 'networkFirst'}, {urlPattern: /^https:\/\/example\.com\/api/,handler: 'networkOnly'}, {urlPattern: /^https:\/\/example\.com\/api/,handler: 'staleWhileRevalidate'}, {urlPattern: /^https:\/\/example\.com\/api/,handler: 'fastest'}, {urlPattern: '/images/:size/:name.jpg',handler: (request, values, options) => {return new Promise('params: ' + values.join(','));}}, {urlPattern: /\/articles\//,handler: 'fastest',options: {cacheName: 'example-cache',cacheExpiration: {maxEntries: 10,maxAgeSeconds: 7 * 24 * 60 * 60},broadcastCacheUpdate: {channelName: 'example-channel-name'},cacheableResponse: {statuses: [0, 200, 404],headers: {'Example-Header-1': 'Header-Value-1','Example-Header-2': 'Header-Value-2'}}}}]
  --dynamicUrlToDependencies { '/template/url1': ['page-1.html', 'index.html'], '/template/url2': ['page-2.html', 'index.html'], '/template/url3': '<html><head></head><body><p>Just in case</p></body></html>'}
